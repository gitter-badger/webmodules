{
  "name": "WebModules",
  "tagline": "Module Management for Web Development",
  "body": "# webmodules\r\n\r\n[![NPM Version][npm-image]][npm-url] [![NPM Downloads][downloads-image]][downloads-url]\r\n\r\n[npm-image]: https://img.shields.io/npm/v/webmodules.svg?style=flat\r\n[npm-url]: https://npmjs.org/package/webmodules\r\n[downloads-image]: https://img.shields.io/npm/dm/webmodules.svg?style=flat\r\n[downloads-url]: https://npmjs.org/package/webmodules\r\n\r\nModule Management for Web Development.\r\n\r\nOffers the following features:\r\n- Installing web modules to `web_modules` folder to separate them from `node_modules`.\r\n- Provides commonjs browser runtime that can be used in a webpage.\r\n- Assist in installing external dependencies when using webpack and browserify.\r\n\r\nGoals:\r\n- Provides straightforward way to install web modules.\r\n- Separated installation of frontend modules and backend modules.\r\n- Provide optimized module system for realtime frontend development.\r\n- Optimized module building use only HTML page. (without a build scripts)\r\n- Provide appropriate packaging system for webcomponents.\r\n\r\n## Installation\r\n```sh\r\n$ npm install -g webmodules\r\n```\r\n\r\n## Usage\r\n### Install Modules\r\n```sh\r\n$ wpm install                             # install browserDependencies(package.json)\r\n$ wpm install packagename                 # from npm\r\n$ wpm install packagename@version\r\n$ wpm install packagename --save          # save to package.json\r\n$ wpm install githubuser/project          # from github\r\n$ wpm install bitbucket:user/project      # from bitbucket\r\n$ wpm install bower:packagename           # from bower\r\n$ wpm install bower:packagename@version\r\n$ wpm install installname[packagename]    # change module installation name\r\n$ wpm install installname[bower:packagename]\r\n...\r\n```\r\n\r\n- Packages are located in `web_modules` folder when installed .\r\n- Also you can choose your own installation folder via `.webmodulesrc` file.  (but it's not applied to sub-modules)\r\n```json\r\n{\r\n    \"directory\": \"path\"\r\n}\r\n```\r\n\r\n### Use Browser Runtime in a Web Page\r\n> You can use browser runtime in a web page when you'd like to develop without a build process.\r\n> supports es2015(*.es6), jsx(*.jsx), less(*.less), css(*.css), html(*.html)\r\n> es2015/jsx are transpiled using [`babel-standalone`](https://github.com/Daniel15/babel-standalone)\r\n\r\n#### Using Node.js\r\n- See [Example](./examples/runtime/)\r\n\r\n- Prepare for example\r\n```sh\r\n$ npm install -g webmodules\r\n$ npm install webmodules --save\r\n$ wpm install jquery d3 angular react react-dom --save\r\n```\r\n\r\n- nodejs backend\r\n```javascript\r\nvar http = require('http');\r\nvar express = require('express');\r\nvar webmodules = require('webmodules');\r\n\r\nexpress()\r\n  .use('/test', express.static('public'))\r\n  .use('/web_modules', webmodules.router())\r\n  .listen(9000, function () {\r\n    console.log('httpd listening on port 9000');\r\n  });\r\n```\r\n\r\n- public/index.html\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <script type=\"text/commonjs\" data-src=\"js/app.js\"></script>\r\n  <script src=\"/web_modules/webmodules/runtime.js\"></script>\r\n</head>\r\n<body>\r\n  <div id=\"content\"></div>\r\n</body>\r\n</html>\r\n```\r\n\r\n- public/js/app.js\r\n```javascript\r\nvar path = require('path');\r\nvar $ = require('jquery');\r\nvar angular = require('angular');\r\nvar d3 = require('d3');\r\nvar react = require('react');\r\nvar reactdom = require('react-dom');\r\n\r\n$(document).ready(function($) {\r\n  console.log('module', require.module);\r\n  console.log('jquery', $);\r\n  console.log('angular', angular);\r\n  console.log('d3', d3);\r\n  console.log('react', react);\r\n  console.log('reactdom', reactdom);\r\n  console.log('sub', sub);\r\n  console.log('path', path.join(__dirname, 'test'));\r\n  \r\n  var CommentBox = react.createClass({displayName: 'CommentBox',\r\n    render: function() {\r\n      return (\r\n        react.createElement('div', {className: \"commentBox\"},\r\n          \"Hello, world! I am a CommentBox.\"\r\n        )\r\n      );\r\n    }\r\n  });\r\n  \r\n  reactdom.render(\r\n    react.createElement(CommentBox, null),\r\n    document.getElementById('content')\r\n  );\r\n});\r\n```\r\n\r\n\r\n### Build modules with [webpack](http://webpack.github.io/docs/)\r\n#### Install webpack\r\n```sh\r\n$ npm install -g webpack\r\n```\r\n\r\n#### Configuration\r\ncreate `webpack.config.js`\r\n```javascript\r\nmodule.exports = {\r\n  \"entry\": {\r\n    \"app\": [\r\n      \"./public/js/app.js\"\r\n    ]\r\n  },\r\n  \"output\": {\r\n    \"path\": \"dist/\",\r\n    \"filename\": \"[name].js\"\r\n  },\r\n  \"externals\": {\r\n    \"jquery\": \"jQuery\"\r\n  }\r\n};\r\n```\r\n\r\n#### Build\r\n```sh\r\n$ webpack\r\n```\r\n\r\n### Publish Package as Web Module\r\nPlease follow the notation method of package.json of [Browserify](https://github.com/substack/browserify-handbook#browser-field).\r\n\r\n#### package.json\r\n```json\r\n{\r\n  \"name\": \"your_package_name\",\r\n  \"version\": \"0.0.0\",\r\n  \"main\": \"nodejs_main_js\",\r\n  \"browser\": \"public/js/app.js\",\r\n  \"browserDependencies\": {\r\n    \"lodash\": \"^4.11.1\"\r\n  },\r\n  \"browserPeerDependencies\": {\r\n    \"jquery\": \"^2.2.3\",\r\n    \"d3\": \"bower:*\"\r\n  }\r\n  ...\r\n}\r\n```\r\n\r\n#### publish\r\n```sh\r\n$ npm publish\r\n```\r\n\r\n#### Contributing\r\n\r\n\r\n\r\n### License\r\nLicensed under the MIT License.\r\nSee [LICENSE](./LICENSE) for the full license text.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}